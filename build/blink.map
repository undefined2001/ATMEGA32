Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_udivmodsi4.o)
                              build/main.o (__udivmodsi4)
/usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/crtatmega32.o (exit)
/usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_copy_data.o)
                              build/main.o (__do_copy_data)
/usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_clear_bss.o)
                              build/main.o (__do_clear_bss)

Discarded input sections

 .data          0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/crtatmega32.o
 .bss           0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/crtatmega32.o
 .text          0x00000000        0x0 build/main.o
 .data          0x00000000        0x0 build/main.o
 .bss           0x00000000        0x0 build/main.o
 .text._ZN4UARTC2Ev
                0x00000000        0x2 build/main.o
 .text          0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc   0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_exit.o)
 .data          0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_exit.o)
 .bss           0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_exit.o)
 .text          0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_copy_data.o)
 .data          0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw!x
eeprom           0x00810000         0x00010000         rw!x
fuse             0x00820000         0x00000002         rw!x
lock             0x00830000         0x00000400         rw!x
signature        0x00840000         0x00000400         rw!x
user_signatures  0x00850000         0x00000400         rw!x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/crtatmega32.o
LOAD build/main.o
LOAD /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/libatmega32.a
END GROUP
                0x00000000                        __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                0x00020000                        __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x00800060                        __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x800060
                0x0000ffa0                        __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x00010000                        __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x00000002]                      __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x00000400                        __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x00000400                        __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x00000400                        __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x198
 *(.vectors)
 .vectors       0x00000000       0x54 /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/crtatmega32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000054                        . = ALIGN (0x2)
                0x00000054                        __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                        __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x00000054                        . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                        __ctors_start = .
 *(.ctors)
                0x00000054                        __ctors_end = .
                0x00000054                        __dtors_start = .
 *(.dtors)
                0x00000054                        __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/crtatmega32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/crtatmega32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/crtatmega32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/crtatmega32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
                0x00000092                        . = ALIGN (0x2)
 *(.text.*)
 .text._ZN4UART4initEm
                0x00000092       0x24 build/main.o
                0x00000092                UART::init(unsigned long)
 .text._ZN4UART8sendCharEc
                0x000000b6        0x8 build/main.o
                0x000000b6                UART::sendChar(char)
 .text._ZN4UART9writeLineEPc
                0x000000be       0x3e build/main.o
                0x000000be                UART::writeLine(char*)
 .text.startup.main
                0x000000fc       0x54 build/main.o
                0x000000fc                main
 .text.libgcc.div
                0x00000150       0x44 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_udivmodsi4.o)
                0x00000150                __udivmodsi4
                0x00000194                        . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000194        0x0 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_exit.o)
                0x00000194                exit
                0x00000194                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000194        0x4 /usr/lib/gcc/avr/13.2.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x00000198                        . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x00000198                        _etext = .

.data           0x00800060       0x12 load address 0x00000198
                0x00800060                        PROVIDE (__data_start = .)
 *(.data)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 .rodata.main.str1.1
                0x00800060       0x11 build/main.o
 *(.gnu.linkonce.r*)
                0x00800072                        . = ALIGN (0x2)
 *fill*         0x00800071        0x1 
                0x00800072                        _edata = .
                0x00800072                        PROVIDE (__data_end = .)

.bss            0x00800072        0x1
                0x00800072                        PROVIDE (__bss_start = .)
 *(.bss)
 *(.bss*)
 .bss.uart      0x00800072        0x1 build/main.o
                0x00800072                uart
 *(COMMON)
                0x00800073                        PROVIDE (__bss_end = .)
                0x00000198                        __data_load_start = LOADADDR (.data)
                0x000001aa                        __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800073        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit .noinit.* .gnu.linkonce.n.*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x00800073                        _end = .
                [!provide]                        PROVIDE (__heap_start = .)
                [!provide]                        PROVIDE (__flmap_init_label = DEFINED (__flmap_noinit_start)?__flmap_noinit_start:0x0)
                [!provide]                        PROVIDE (__flmap = DEFINED (__flmap)?__flmap:0x0)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                        __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x12
 *(.comment)
 .comment       0x00000000       0x12 build/main.o
                                 0x13 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x00000000       0x3c
 .note.gnu.avr.deviceinfo
                0x00000000       0x3c /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/crtatmega32.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0x4e6
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000      0x4e6 /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_abbrev   0x00000000      0x4a3
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x4a3 /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_line     0x00000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x00000000       0x1d /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_frame
 *(.debug_frame)

.debug_str      0x00000000      0x196
 *(.debug_str)
 .debug_str     0x00000000      0x196 /usr/lib/gcc/avr/13.2.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_addr
 *(.debug_addr)

.debug_line_str
 *(.debug_line_str)

.debug_loclists
 *(.debug_loclists)

.debug_macro
 *(.debug_macro)

.debug_names
 *(.debug_names)

.debug_rnglists
 *(.debug_rnglists)

.debug_str_offsets
 *(.debug_str_offsets)

.debug_sup
 *(.debug_sup)
OUTPUT(build/firmware.elf elf32-avr)
LOAD linker stubs
